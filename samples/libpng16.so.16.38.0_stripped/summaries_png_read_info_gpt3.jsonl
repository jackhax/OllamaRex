{"FUN_001077c0": "This function swaps the bytes of a given parameter and passes it to the png_handle_as_unknown() function."}
{"FUN_00119fb0": "This function returns the inflate of a given parameter and checks if the window size is valid."}
{"FUN_00107840": "This function sets an error message for a given zlib return code in the memory location pointed to by param_1 + 0x170."}
{"FUN_00106590": "This function checks if the given parameter is between 0x41 and 0x5A (inclusive)."}
{"FUN_001068b0": "This function calculates and stores a CRC32 value into the memory location specified by the parameter `param_1`."}
{"FUN_0010b470": "This function checks a byte of data at a given address, and if it is set to a certain value, it calls the png_warning function, otherwise it calls the png_error function."}
{"FUN_0010b490": "This function checks if a certain bit in a byte at a specified location is set and if it is, it calls the png_warning() function, otherwise it calls the png_error() function."}
{"FUN_0010cbb0": "This function allocates a block of memory of size param_2 and returns a pointer to it, or a pointer to a function if param_1 is not 0."}
{"FUN_0011d6f0": "This function checks if a chunk type is valid and if it is not, throws an error."}
{"FUN_00113740": "This function checks if a pointer at a given address is valid, and if it is, calls the function pointed to. If not, it calls the png_error function with an error message."}
{"FUN_001068d0": "This function computes a CRC32 checksum of a given memory region."}
{"FUN_0011d730": "This function checks if the size of a given chunk is valid and returns an error if it is too large."}
{"FUN_001091d0": "This function computes a division of 10000000000 by the parameter, rounds it to the nearest integer, and returns either the integer or 0 if it is not between -2147483648 and 2147483647."}
{"FUN_00119ae0": "This function calculates an integer value from the bytes of an array."}
{"FUN_00107910": "This function sets bits in a variable based on the value of a ushort at a given address."}
{"FUN_00108240": "This function parses a string and sets flags based on the characters in the string."}
{"FUN_001062e0": "This function returns true if all elements of two arrays, plus or minus a given parameter, are equal."}
{"FUN_00108ce0": "This function calculates the result of the division of two integers, rounds it to the nearest integer, and stores it in the first parameter."}
{"FUN_00109960": "This function returns true if the value of param_1 is greater than 105000, and false otherwise."}
{"FUN_0010ae00": "This function converts a number to a string of hexadecimal or decimal characters."}
{"FUN_0010adb0": "This function copies a string from param_4 to param_1, up to a maximum of param_2 characters or until the end of the string is reached."}
{"FUN_0011a130": "This function inflates given data and checks for errors, setting an error message in the memory location pointed to by param_1 + 0x170 if necessary."}
{"FUN_0010b520": "This function checks if a certain bit in a byte at a specified location is set and calls the appropriate function depending on the value of the bit and the value of the parameter."}
{"FUN_0010cc20": "This function allocates a block of memory of size param_2 and copies param_3 elements of data stored in param_2 into it, filling the rest of the block with zeroes, then returns a pointer to it."}
{"FUN_00119a20": "This function allocates a block of memory of size param_2 and returns a pointer to it, or returns a pointer to a function and/or displays a warning or error message if param_1 is not 0."}
{"FUN_00119cf0": "This function checks if the pointer at the given address is valid and calls the function pointed to, or calls the png_error function with an error message if not."}
{"FUN_00119be0": "This function checks the validity of a pointer to a given address and calls the corresponding function if it is valid, otherwise it calls the png_error function with an error message."}
{"FUN_00119cb0": "This function checks if a pointer at a given address is valid, calls the function pointed to, and computes a CRC32 checksum of the given memory region."}
{"FUN_0011d820": "This function checks if a given chunk type is valid, computes a CRC32 checksum of its memory region, and throws an error if the size of the chunk is too large."}
{"FUN_00107970": "This function sets bits in a variable based on the value of a ushort at a given address and stores the result in a second variable."}
{"FUN_00106470": "This function compares two arrays and returns true if all elements are equal, plus or minus a given parameter."}
{"FUN_00109270": "This function calculates the result of the division of two integers, rounds it to the nearest integer, stores it in the first parameter and returns either the integer or 0 if it is not between -2147483648 and 2147483647."}
{"FUN_00108dd0": "This function calculates the result of multiple divisions of integers, rounds it to the nearest integer, and stores it in the first parameter."}
{"FUN_00119890": "This function initializes the zlib stream for compression or decompression and sets an error message for a given zlib return code."}
{"FUN_00109980": "This function checks if a certain bit in a byte at a specified location is set and calls functions to calculate the result of the division of two integers, round it to the nearest integer, and check if the value of param_1 is greater than 105000, returning true or false depending on the results."}
{"FUN_001065b0": "This function checks if a certain bit in a byte at a specified location is set, checks if the given parameter is between 0x41 and 0x5A (inclusive), converts a number to a string of hexadecimal or decimal characters, copies a string from param_4 to param_1, up to a maximum of param_2 characters or until the end of the string is reached, and calls the appropriate function depending on the value of the bit and the value of the parameter."}
{"FUN_001200e0": "This function checks the parameters, allocates a block of memory, copies data into it, and calls the appropriate function depending on the value of the bit and the value of the parameter."}
{"FUN_0011a000": "This function inflates a given parameter, sets an error message for a given zlib return code, checks if a pointer at a given address is valid, calls the function pointed to, and computes a CRC32 checksum of the given memory region."}
{"FUN_00119dc0": "This function checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, and calls the png_error/png_chunk_warning functions with an error message or warning, respectively."}
{"FUN_00108f30": "This function calculates the result of multiple divisions of integers, rounds it to the nearest integer, checks if the result and a given array, plus or minus a given parameter, are equal, and returns true if they are."}
{"FUN_0011a2b0": "This function inflates given data, allocates a block of memory, initializes the zlib stream, sets an error message, and checks for errors."}
{"FUN_00109a40": "This function checks if a certain bit in a byte at a specified location is set and calls the appropriate function depending on the value of the bit and the value of the parameter, and calculates the result of the division of two integers, rounds it to the nearest integer and checks if the value of param_1 is greater than 105000."}
{"FUN_00107e00": "This function checks if a certain bit in a byte at a specified location is set and calls the appropriate function depending on the value of the bit and the value of the parameter, as well as converting a number to a string of hexadecimal or decimal characters, and copying a string from param_4 to param_1, up to a maximum of param_2 characters or until the end of the string is reached."}
{"FUN_00109ad0": "This function checks if a certain bit in a byte at a specified location is set, performs various checks and calculations depending on the bit and parameter values, and calls the appropriate function depending on the bit and parameter values."}
{"FUN_00107a60": "This function checks if a certain bit in a byte at a specified location is set, checks if the given parameter is between 0x41 and 0x5A (inclusive), converts a number to a string of hexadecimal or decimal characters, copies a string from param_4 to param_1, up to a maximum of param_2 characters or until the end of the string is reached, and calls the appropriate function depending on the value of the bit and the value of the parameter, while also validating certain parameters and checking for various conditions."}
{"FUN_001079d0": "This function checks a bit in a byte at a specified location, checks if a parameter is between 0x41 and 0x5A (inclusive), converts a number to a string of hexadecimal or decimal characters, copies a string from one parameter to another, and calls the appropriate function depending on the value of the bit and the value of the parameter."}
{"FUN_0011c9f0": "This function sets flags based on the characters in a given string, allocates memory, validates pointers, computes CRC32 checksums, and calls png_error/png_chunk_warning functions with error messages or warnings."}
{"FUN_0011c040": "This function checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, calls the png_error/png_chunk_warning functions with an error message or warning, and sets the eXIf data."}
{"FUN_00119eb0": "This function checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, allocates memory for the pointer if necessary and calls the png_error/png_chunk_warning functions with an error message or warning, respectively."}
{"FUN_0011c520": "This function checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, calls the png_error/png_chunk_warning functions with an error message or warning, and sets the oFFs chunk in a png file."}
{"FUN_0011aba0": "This function checks a given memory region for validity, calls the function pointed to, computes a CRC32 checksum, and calls png_error/png_chunk_warning with an error message or warning."}
{"FUN_0011a760": "This function checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, calls the png_error/png_chunk_warning functions with an error message or warning, and sets the PNG palette."}
{"FUN_0011cd90": "This function checks the parameters, allocates a block of memory, copies data into it, calls the appropriate function depending on the value of the bit and the value of the parameter, checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, and calls the png_error/png_chunk_warning functions with an error message or warning, respectively."}
{"FUN_0011bb10": "This function checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, and sets a transparency channel if valid and appropriate."}
{"FUN_0011bd80": "This function checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, calls the png_error/png_chunk_warning functions with an error message or warning, and sets the background color using the parameters provided."}
{"FUN_0011cc80": "This function checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, and calls the png_error/png_chunk_warning functions with an error message or warning, respectively, as well as setting the tIME chunk if the parameters are valid."}
{"FUN_0011c6b0": "This function checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, and sets parameters for a PNG file if valid."}
{"FUN_0011c240": "This function checks if the IHDR chunk is present, computes a CRC32 checksum of the given memory region, and calls the png_set_hIST/png_chunk_benign_error functions with a histogram or an error/warning message, respectively."}
{"FUN_0011a560": "This function checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, and calls the png_error/png_chunk_warning functions with an error message or warning, sets various parameters based on the input data, and calls the png_set_IHDR function."}
{"FUN_0011c3c0": "This function checks if a pointer at a given address is valid and calls the function pointed to, computes a CRC32 checksum of the given memory region, and calls the png_error/png_chunk_warning functions with an error message or warning if necessary."}
{"FUN_0011aa40": "This function checks the validity of a pointer, calls the related function, computes a CRC32 checksum, and calls the png_error/png_chunk_warning functions with an error message or warning."}
{"FUN_0011b820": "This function checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, and calls the png_set_sPLT function with an error message or warning."}
{"FUN_001098a0": "This function calculates the result of multiple divisions of integers, rounds it to the nearest integer, compares the result with a given array plus or minus a given parameter, and returns true if they are equal."}
{"FUN_0011d1c0": "This function checks the parameters, allocates a block of memory, copies data into it, computes a CRC32 checksum of the given memory region, and calls the appropriate function depending on the value of the bit and the value of the parameter."}
{"FUN_0011cf40": "This function checks the parameters, allocates a block of memory, copies data into it, inflates given data, initializes the zlib stream, sets an error message, and calls the appropriate function depending on the value of the bit and the value of the parameter."}
{"FUN_0011aab0": "This function checks if a certain bit in a byte at a specified location is set and calls the appropriate function depending on the value of the bit and the value of the parameter, calculates an integer value from the bytes of an array, sets bits in a variable based on the value of a ushort at a given address, calls functions to compute a CRC32 checksum of the given memory region, calls functions to print errors or warnings, calculates the result of the division of two integers and checks if the value of param_1 is greater than 105000."}
{"FUN_0011aff0": "This function checks if a certain bit in a byte at a specified location is set, calls the function pointed to, computes a CRC32 checksum of the given memory region, sets bits in a variable, and calls the png_error/png_chunk_warning functions with an error message or warning, respectively."}
{"FUN_00109c50": "This function checks if a certain bit in a byte at a specified location is set, performs various checks and calculations depending on the bit and parameter values, and calls the appropriate function depending on the bit and parameter values, as well as checking for known incorrect sRGB profiles and known out-of-date sRGB profiles with no signature."}
{"FUN_0011d520": "The function FUN_0011d520 checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, allocates memory for the pointer if necessary, calls the png_error/png_chunk_warning functions with an error message or warning, and saves unknown chunks."}
{"FUN_0011add0": "This function checks if a pointer at a given address is valid, calls the function pointed to, computes a CRC32 checksum of the given memory region, and sets bits in a variable based on the value of a ushort at a given address and stores the result in a second variable."}
{"FUN_0011b110": "The code performs a variety of operations related to compressed data, including bit checking, calculations, memory allocation, setting error messages, checking pointer validity, function calling, and CRC32 checksum calculation, as well as various conversions."}
{"png_read_info": "This function checks the validity of a pointer, calls the related function, computes a CRC32 checksum, and calls the png_error/png_chunk_warning functions with an error message or warning, as well as setting various parameters for a PNG file."}
